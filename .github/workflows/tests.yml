name: tests

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  tests:
    name: Java ${{ matrix.java-version }} ${{ matrix.os }}
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest]
        java-distribution: [adopt]
        java-version: [8, 11, 15]

    steps:
      - uses: actions/checkout@v2.1.1
        with:
          submodules: recursive

      - uses: actions/setup-java@v2
        with:
          distribution: "${{ matrix.java-distribution }}"
          java-version: "${{ matrix.java-version }}"

      - uses: actions/cache@v2
        id: maven-cache
        with:
          path: ~/.m2/
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Format check
        if: ${{ matrix.java-version != 8 }}
        run: mvn com.spotify.fmt:fmt-maven-plugin:check

      - name: Tests
        run: mvn "-Dh3.remove.images=true" -B -V clean test site

  tests-no-docker:
    name: Java (No Docker) ${{ matrix.java-version }} ${{ matrix.os }}
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        # TODO: Docker on macos-latest running is not working
        os: [macos-latest, windows-latest]
        java-distribution: [adopt]
        java-version: [8, 11, 15]

    steps:
      - uses: actions/checkout@v2.1.1
        with:
          submodules: recursive

      - uses: actions/setup-java@v2
        with:
          distribution: "${{ matrix.java-distribution }}"
          java-version: "${{ matrix.java-version }}"

      - uses: actions/cache@v2
        id: maven-cache
        with:
          path: ~/.m2/
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Tests
        run: mvn -B -V clean test site

  tests-coverage:
    name: Java (Coverage) ${{ matrix.java-version }} ${{ matrix.os }}
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest]
        java-distribution: [adopt]
        java-version: [8]

    steps:
      - uses: actions/checkout@v2.1.1
        with:
          submodules: recursive

      - uses: actions/setup-java@v2
        with:
          distribution: "${{ matrix.java-distribution }}"
          java-version: "${{ matrix.java-version }}"

      - uses: actions/cache@v2
        id: maven-cache
        with:
          path: ~/.m2/
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Coverage report
        run: |
          mvn clean test jacoco:report coveralls:report -Dh3.use.docker=false -Dh3.test.system=true -Dh3.additional.argLine="-Djava.library.path=./src/main/resources/linux-x64/" --no-transfer-progress -DrepoToken=$COVERALLS_SECRET -DpullRequest=${{ github.event.number }}
        env:
          CI_NAME: github
          COVERALLS_SECRET: ${{ secrets.GITHUB_TOKEN }} 
